### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  createNote(body: String, deletedAt: String, isDeleted: Boolean, title: String): NoteType
  createPassword(email: String, fieldname: String, password: String, username: String): PasswordType
  createTodo(body: String, deletedAt: String, dueDate: String, isDeleted: Boolean, priority: String, title: String): TodoType
  createUser(email: String, password: String, username: String): Boolean
  deleteNote(id: String): NoteType
  deleteTodo(id: String): Boolean
  deleteUser(id: String): Boolean
  deletedPassword(id: String): Boolean
  loginUser(password: String, username: String): Boolean
  logoutUser: Boolean
  restoreNote(deletedAt: String, id: String, isDeleted: Boolean): NoteType
  restoreTodo(deletedAt: String, id: String, isDeleted: Boolean): TodoType
  updateNote(body: String, deletedAt: String, id: String, isDeleted: Boolean, title: String): NoteType
  updatePassword(deletedAt: String, email: String, fieldname: String, id: String, isDeleted: Boolean, password: String, username: String): PasswordType
  updateTodo(body: String, deletedAt: String, dueDate: String, id: String, isDeleted: Boolean, priority: String, title: String): TodoType
  updateUser(id: String, password: String): Boolean
}

type NoteType {
  body: String
  createdAt: DateTime
  deletedAt: DateTime
  id: String
  isDeleted: Boolean
  title: String
  updatedAt: DateTime
  user: UserType
}

type PasswordType {
  createdAt: DateTime
  deletedAt: DateTime
  email: String
  fieldname: String
  id: String
  isDeleted: Boolean
  password: String
  updatedAt: DateTime
  user: UserType
  username: String
}

type Query {
  getNote(id: String!): NoteType
  getNotes(cursor: Int, isDeleted: Boolean): [NoteType]
  getPasswordField(id: String!): PasswordType
  getPasswordFields(cursor: Int, isDeleted: Boolean): [PasswordType]
  getTodo(id: String!): TodoType
  getTodos(cursor: Int, isDeleted: Boolean): [TodoType]
  getUsers(cursor: Int): [UserType]
  hello: String
}

type TodoType {
  body: String
  createdAt: DateTime
  deletedAt: DateTime
  dueDate: DateTime
  id: String
  isDeleted: Boolean
  priority: String
  title: String
  updatedAt: DateTime
  user: UserType
}

type UserType {
  email: String
  id: String
  note: [NoteType]
  password: [PasswordType]
  todo: [TodoType]
  username: String
}

type user {
  email: String
  id: String
  username: String
}