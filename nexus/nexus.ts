/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Mutation: {};
  NoteType: { // root type
    body?: string | null; // String
    createdAt?: number | null; // Float
    deletedAt?: number | null; // Float
    id?: string | null; // String
    isDeleted?: boolean | null; // Boolean
    title?: string | null; // String
    updatedAt?: number | null; // Float
    user?: NexusGenRootTypes['UserType'] | null; // UserType
  }
  PasswordType: { // root type
    createdAt?: number | null; // Float
    deletedAt?: number | null; // Float
    email?: string | null; // String
    fieldname?: string | null; // String
    id?: string | null; // String
    isDeleted?: boolean | null; // Boolean
    password?: string | null; // String
    updatedAt?: number | null; // Float
    user?: NexusGenRootTypes['UserType'] | null; // UserType
  }
  Query: {};
  TodoType: { // root type
    body?: string | null; // String
    createdAt?: number | null; // Float
    deletedAt?: number | null; // Float
    id?: string | null; // String
    isDeleted?: boolean | null; // Boolean
    priority?: string | null; // String
    title?: string | null; // String
    updatedAt?: number | null; // Float
    user?: NexusGenRootTypes['UserType'] | null; // UserType
  }
  UserType: { // root type
    email?: string | null; // String
    id?: string | null; // String
    note?: Array<NexusGenRootTypes['NoteType'] | null> | null; // [NoteType]
    password?: Array<NexusGenRootTypes['PasswordType'] | null> | null; // [PasswordType]
    todo?: Array<NexusGenRootTypes['TodoType'] | null> | null; // [TodoType]
    username?: string | null; // String
  }
  user: { // root type
    email?: string | null; // String
    id?: string | null; // String
    username?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createNote: boolean | null; // Boolean
    createPassword: boolean | null; // Boolean
    createTodo: boolean | null; // Boolean
    createUser: boolean | null; // Boolean
    deleteNote: boolean | null; // Boolean
    deleteTodo: boolean | null; // Boolean
    deleteUser: boolean | null; // Boolean
    deletedPassword: boolean | null; // Boolean
    loginUser: boolean | null; // Boolean
    logoutUser: boolean | null; // Boolean
    updateNote: boolean | null; // Boolean
    updatePassword: boolean | null; // Boolean
    updateTodo: boolean | null; // Boolean
    updateUser: boolean | null; // Boolean
  }
  NoteType: { // field return type
    body: string | null; // String
    createdAt: number | null; // Float
    deletedAt: number | null; // Float
    id: string | null; // String
    isDeleted: boolean | null; // Boolean
    title: string | null; // String
    updatedAt: number | null; // Float
    user: NexusGenRootTypes['UserType'] | null; // UserType
  }
  PasswordType: { // field return type
    createdAt: number | null; // Float
    deletedAt: number | null; // Float
    email: string | null; // String
    fieldname: string | null; // String
    id: string | null; // String
    isDeleted: boolean | null; // Boolean
    password: string | null; // String
    updatedAt: number | null; // Float
    user: NexusGenRootTypes['UserType'] | null; // UserType
  }
  Query: { // field return type
    getNotes: Array<NexusGenRootTypes['NoteType'] | null> | null; // [NoteType]
    getPasswordField: Array<NexusGenRootTypes['PasswordType'] | null> | null; // [PasswordType]
    getTodos: Array<NexusGenRootTypes['TodoType'] | null> | null; // [TodoType]
    getUsers: Array<NexusGenRootTypes['UserType'] | null> | null; // [UserType]
    hello: string | null; // String
  }
  TodoType: { // field return type
    body: string | null; // String
    createdAt: number | null; // Float
    deletedAt: number | null; // Float
    id: string | null; // String
    isDeleted: boolean | null; // Boolean
    priority: string | null; // String
    title: string | null; // String
    updatedAt: number | null; // Float
    user: NexusGenRootTypes['UserType'] | null; // UserType
  }
  UserType: { // field return type
    email: string | null; // String
    id: string | null; // String
    note: Array<NexusGenRootTypes['NoteType'] | null> | null; // [NoteType]
    password: Array<NexusGenRootTypes['PasswordType'] | null> | null; // [PasswordType]
    todo: Array<NexusGenRootTypes['TodoType'] | null> | null; // [TodoType]
    username: string | null; // String
  }
  user: { // field return type
    email: string | null; // String
    id: string | null; // String
    username: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Mutation: { // field return type name
    createNote: 'Boolean'
    createPassword: 'Boolean'
    createTodo: 'Boolean'
    createUser: 'Boolean'
    deleteNote: 'Boolean'
    deleteTodo: 'Boolean'
    deleteUser: 'Boolean'
    deletedPassword: 'Boolean'
    loginUser: 'Boolean'
    logoutUser: 'Boolean'
    updateNote: 'Boolean'
    updatePassword: 'Boolean'
    updateTodo: 'Boolean'
    updateUser: 'Boolean'
  }
  NoteType: { // field return type name
    body: 'String'
    createdAt: 'Float'
    deletedAt: 'Float'
    id: 'String'
    isDeleted: 'Boolean'
    title: 'String'
    updatedAt: 'Float'
    user: 'UserType'
  }
  PasswordType: { // field return type name
    createdAt: 'Float'
    deletedAt: 'Float'
    email: 'String'
    fieldname: 'String'
    id: 'String'
    isDeleted: 'Boolean'
    password: 'String'
    updatedAt: 'Float'
    user: 'UserType'
  }
  Query: { // field return type name
    getNotes: 'NoteType'
    getPasswordField: 'PasswordType'
    getTodos: 'TodoType'
    getUsers: 'UserType'
    hello: 'String'
  }
  TodoType: { // field return type name
    body: 'String'
    createdAt: 'Float'
    deletedAt: 'Float'
    id: 'String'
    isDeleted: 'Boolean'
    priority: 'String'
    title: 'String'
    updatedAt: 'Float'
    user: 'UserType'
  }
  UserType: { // field return type name
    email: 'String'
    id: 'String'
    note: 'NoteType'
    password: 'PasswordType'
    todo: 'TodoType'
    username: 'String'
  }
  user: { // field return type name
    email: 'String'
    id: 'String'
    username: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createNote: { // args
      body?: string | null; // String
      deletedAt?: string | null; // String
      isDeleted?: boolean | null; // Boolean
      title?: string | null; // String
    }
    createPassword: { // args
      email?: string | null; // String
      fieldname?: string | null; // String
      password?: string | null; // String
    }
    createTodo: { // args
      body?: string | null; // String
      title?: string | null; // String
    }
    createUser: { // args
      email?: string | null; // String
      password?: string | null; // String
      username?: string | null; // String
    }
    deleteNote: { // args
      id?: string | null; // String
    }
    deleteTodo: { // args
      id?: string | null; // String
    }
    deleteUser: { // args
      id?: string | null; // String
    }
    deletedPassword: { // args
      id?: string | null; // String
    }
    loginUser: { // args
      password?: string | null; // String
      username?: string | null; // String
    }
    updateNote: { // args
      body?: string | null; // String
      deletedAt?: string | null; // String
      id?: string | null; // String
      isDeleted?: boolean | null; // Boolean
      title?: string | null; // String
    }
    updatePassword: { // args
      deletedAt?: string | null; // String
      email?: string | null; // String
      fieldname?: string | null; // String
      id?: string | null; // String
      isDeleted?: string | null; // String
      password?: string | null; // String
    }
    updateTodo: { // args
      body?: string | null; // String
      deletedAt?: string | null; // String
      id?: string | null; // String
      isDeleted?: string | null; // String
      priority?: string | null; // String
      title?: string | null; // String
    }
    updateUser: { // args
      id?: string | null; // String
      password?: string | null; // String
    }
  }
  Query: {
    getNotes: { // args
      cursor?: number | null; // Int
    }
    getPasswordField: { // args
      cursor?: number | null; // Int
    }
    getTodos: { // args
      cursor?: number | null; // Int
    }
    getUsers: { // args
      cursor?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}